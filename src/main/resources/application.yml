server:
  port: 8844
spring:
  profiles:
    active: dev
  application:
    name: jetlinks-demo
#  datasource:
#    url: jdbc:h2:file:./db/${spring.application.name}
#    username: sa
#    password:
#    type: com.zaxxer.hikari.HikariDataSource
  elasticsearch:
    jest:
      uris: http://localhost:9200
  r2dbc:
    url: r2dbc:h2:file://PUBLIC/./db/${spring.application.name}
    username: sa
    password:
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: true
    default-property-inclusion: non_null
easyorm:
  default-schema: PUBLIC # 数据库默认的schema
  dialect: h2 #数据库方言
hsweb:
  webflux:
    response-wrapper: enabled #开启响应包装器(将正常的Mono返回值包转为ResponseMessage)
  auth:   #默认的用户配置
    users:
      admin:
        username: admin
        password: admin
        permissions:
          - id: device-instance
            actions: ['query','save','delete']
  authorize:
    auto-parse: true

jetlinks:
  redis:
    hosts: redis://127.0.0.1:6379
    database: 0
    #    password:
    type: standalone
  server-id: ${spring.application.name}:${server.port} #设备服务网关服务ID,不同服务请设置不同的ID
  transport-limit:
    MQTT: 1000000

logging:
  level:
    org.jetlinks: debug
    org.hswebframework: debug
    org.springframework.transaction: debug
    org.springframework.data.r2dbc.connectionfactory: debug
    io.micrometer: debug
    # org.springframework: warn

vertx:
  max-event-loop-execute-time-unit: seconds
  max-event-loop-execute-time: 30
  max-worker-execute-time-unit: seconds
  max-worker-execute-time: 30
management:
  metrics:
    export:
      elastic:
        host: http://localhost:9200